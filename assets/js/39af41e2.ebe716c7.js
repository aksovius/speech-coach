"use strict";(self.webpackChunkspeech_coach_docs=self.webpackChunkspeech_coach_docs||[]).push([[9030],{5206:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"getting-started/tests","title":"Tests","description":"This directory contains tests for the Speech Coach project. The test structure reflects the source code structure.","source":"@site/docs/getting-started/tests.md","sourceDirName":"getting-started","slug":"/getting-started/tests","permalink":"/docs/getting-started/tests","draft":false,"unlisted":false,"editUrl":"https://github.com/aksovius/speech-coach/tree/main/docs-site/docs/getting-started/tests.md","tags":[],"version":"current","frontMatter":{"id":"tests","title":"Tests","sidebar_label":"Tests"},"sidebar":"docsSidebar","previous":{"title":"Installation","permalink":"/docs/getting-started/installation"},"next":{"title":"Configuration","permalink":"/docs/category/configuration"}}');var r=t(4848),c=t(8453);const i={id:"tests",title:"Tests",sidebar_label:"Tests"},o="Tests for Speech Coach Project",d={},l=[{value:"Structure",id:"structure",level:2},{value:"Running Tests",id:"running-tests",level:2},{value:"Fixtures",id:"fixtures",level:2},{value:"Adding New Tests",id:"adding-new-tests",level:2},{value:"Code Coverage",id:"code-coverage",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"tests-for-speech-coach-project",children:"Tests for Speech Coach Project"})}),"\n",(0,r.jsx)(s.p,{children:"This directory contains tests for the Speech Coach project. The test structure reflects the source code structure."}),"\n",(0,r.jsx)(s.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"tests/\n\u251c\u2500\u2500 conftest.py  - common fixtures for tests\n\u2514\u2500\u2500 src/\n    \u2514\u2500\u2500 shared/  - tests for shared components\n        \u251c\u2500\u2500 services/  - tests for services\n        \u251c\u2500\u2500 schemas/   - tests for data schemas\n        \u2514\u2500\u2500 messaging/ - tests for messaging components\n"})}),"\n",(0,r.jsx)(s.h2,{id:"running-tests",children:"Running Tests"}),"\n",(0,r.jsx)(s.p,{children:"To run all tests:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python -m pytest\n"})}),"\n",(0,r.jsx)(s.p,{children:"To run tests with code coverage:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python -m pytest --cov=src\n"})}),"\n",(0,r.jsx)(s.p,{children:"To run specific tests:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python -m pytest tests/src/shared/services/test_audio_service.py\n"})}),"\n",(0,r.jsx)(s.h2,{id:"fixtures",children:"Fixtures"}),"\n",(0,r.jsxs)(s.p,{children:["Common fixtures for tests are defined in the ",(0,r.jsx)(s.code,{children:"conftest.py"})," file:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"event_loop"})," - fixture for enabling asynchronous tests"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mock_config"})," - mock for configuration"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mock_broker"})," - mock for message broker"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"temp_file"})," - fixture for creating a temporary file"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"temp_ogg_file"})," - fixture for creating a temporary audio file"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mock_s3_client"})," - mock for S3 client (MinIO)"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"adding-new-tests",children:"Adding New Tests"}),"\n",(0,r.jsx)(s.p,{children:"When adding new tests, follow these principles:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Create tests in the appropriate directories reflecting the project structure"}),"\n",(0,r.jsxs)(s.li,{children:["Use the ",(0,r.jsx)(s.code,{children:"test_"})," prefix for test files and functions"]}),"\n",(0,r.jsxs)(s.li,{children:["Use fixtures from ",(0,r.jsx)(s.code,{children:"conftest.py"})," for common operations"]}),"\n",(0,r.jsxs)(s.li,{children:["For asynchronous tests, use the ",(0,r.jsx)(s.code,{children:"@pytest.mark.asyncio"})," decorator"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"code-coverage",children:"Code Coverage"}),"\n",(0,r.jsx)(s.p,{children:"Aim for test code coverage of at least 80%. Focus mainly on business logic and error handling."})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var n=t(6540);const r={},c=n.createContext(r);function i(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);