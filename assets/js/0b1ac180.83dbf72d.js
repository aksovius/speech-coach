"use strict";(self.webpackChunkspeech_coach_docs=self.webpackChunkspeech_coach_docs||[]).push([[5863],{69:(e,r,t)=>{t.d(r,{A:()=>i});const i=t.p+"assets/images/architecture-diagram-998cc64c98212f3d536597b482ec3609.svg"},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var i=t(6540);const s={},n=i.createContext(s);function a(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(n.Provider,{value:r},e.children)}},9259:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"architecture/overview","title":"System Overview","description":"Speech Coach is built with a modular microservices architecture designed for real-time audio processing, AI feedback, and language analytics.","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/docs/architecture/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/aksovius/speech-coach/tree/main/docs-site/docs/architecture/overview.md","tags":[],"version":"current","frontMatter":{"id":"overview","title":"System Overview","sidebar_label":"Overview"},"sidebar":"docsSidebar","previous":{"title":"Introduction","permalink":"/docs/intro"},"next":{"title":"Data Flow","permalink":"/docs/architecture/data-flow"}}');var s=t(4848),n=t(8453);const a={id:"overview",title:"System Overview",sidebar_label:"Overview"},c="\ud83e\udde0 System Overview",o={},d=[];function l(e){const r={a:"a",h1:"h1",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"-system-overview",children:"\ud83e\udde0 System Overview"})}),"\n",(0,s.jsx)(r.p,{children:"Speech Coach is built with a modular microservices architecture designed for real-time audio processing, AI feedback, and language analytics."}),"\n",(0,s.jsx)(r.p,{children:"The system is divided into logical layers:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"User & Frontend"})," \u2013 Interaction through Telegram, routed via NGINX"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Application Layer"})," \u2013 FastAPI + Redis Stream for async task distribution"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Processing Layer"})," \u2013 Workers handle transcription and feedback via OpenAI"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Storage Layer"})," \u2013 PostgreSQL for data, MinIO for audio"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Analytics Layer"})," \u2013 CDC via Debezium \u2192 Redpanda \u2192 Bytewax for streaming"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Monitoring & Visualization (Planned)"})," \u2013 Grafana, Loki, Prometheus, ClickHouse"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Architecture Diagram",src:t(69).A+"",width:"2847",height:"2103"})}),"\n",(0,s.jsx)(r.p,{children:"This architecture supports future scaling via FastAPI/Worker clusters, HA PostgreSQL, and a frontend dashboard."}),"\n",(0,s.jsxs)(r.p,{children:["For deeper insight into component communication, see ",(0,s.jsx)(r.a,{href:"./data-flow",children:"Data Flow"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);